{"version":3,"sources":["pages/Join.tsx","component/List.tsx","component/Message.tsx","component/Input.tsx","pages/Room.tsx","pages/Home.tsx","layout/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Join","useState","name","setName","Grid","container","justifyContent","style","padding","marginTop","item","xs","sm","md","Paper","direction","alignItems","spacing","TextField","onChange","e","target","value","variant","placeholder","Button","component","Nav","to","List","ListData","subheader","ListSubheader","height","overflow","map","key","ListItem","dense","ListItemIcon","ListItemText","Message","text","user","console","log","Position","width","Typography","elevation","Input","socket","sendMessage","message","setMessage","multiline","rows","fullWidth","onKeyPress","onClick","Room","location","messages","setMessages","users","setUsers","messagesRef","useRef","useEffect","socketClient","queryString","parse","search","emit","on","userInfoArray","disconnect","current","scrollTop","scrollHeight","overflowY","ref","preventDefault","Home","paddingTop","Link","size","href","startIcon","Header","meunOpen","setMeunOpen","SideMenuToggle","prevState","ListContent","DomLink","Divider","AppBar","position","IconButton","edge","color","aria-label","paddingLeft","Drawer","open","onClose","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8153041.chunk.js","sourcesContent":["import Grid  from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useState } from \"react\";\nimport { Link as Nav} from \"react-router-dom\";\n\nfunction Join() {\n  const [name, setName] = useState(\"\"); \n  return (\n    <Grid container justifyContent=\"center\" style={{ padding: \"1em\", marginTop: '10px' }}>\n      <Grid item xs={12} sm={9} md={7}>\n        <Paper>\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n            <Grid item>이름을 입력하고 입장을 하시오.</Grid>\n            <Grid item>\n              <TextField\n                name=\"userName\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                variant=\"outlined\"\n                placeholder=\"이름을 입력해주세요.\"\n              ></TextField>\n            </Grid>\n            <Grid item>\n              <Button variant=\"contained\"  component={Nav} to={`/room?name=${name}`}>\n                입장\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\nexport default Join;\n","import { List as Container} from '@material-ui/core';\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PersonIcon from '@material-ui/icons/Person';\n\ninterface ListProps {\n    ListData: Array<any>\n}\n\nfunction List({ListData}: ListProps){\n    return (\n        <Container \n            subheader={\n                <ListSubheader>접속자 목록</ListSubheader>\n            }\n            style={{ height: \"150px\", overflow: \"auto\"}}     \n        >   \n            {ListData.map((value, key)=> {\n                const { name } = value;\n                return (\n                    <ListItem key={key} dense={true}>\n                        <ListItemIcon>\n                            <PersonIcon />\n                        </ListItemIcon>\n                        <ListItemText>\n                            {name}\n                        </ListItemText>\n                    </ListItem>\n                ) \n            })}\n            \n        </Container>\n    );\n}\nexport default List;","import Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\ninterface MessageProps {\n    name: string;\n    text: string;\n    user: string;\n}\n\nfunction Message({name, text, user}: MessageProps){\n    console.log(user, name);\n    const Position = user === name ? \"flex-end\" : \"flex-start\";\n    return (\n        <Grid container direction=\"column\" alignItems={Position} spacing={2} style={{width: \"100%\", padding: \"10px 10px\"}}>\n            <Grid item>\n                <Typography>{name}</Typography>\n            </Grid>\n            <Grid item>\n                <Paper elevation={3} style={{ padding: \"10px 20px\"}}>\n                    {text}\n                </Paper>\n            </Grid>        \n        </Grid>\n    )\n}\nexport default Message;","import TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\ninterface InputProps {\n  sendMessage: (e) => void;\n  message: string;\n  setMessage: (e) => void;\n}\n\nfunction Input({sendMessage, message, setMessage}: InputProps){\n    return (\n      <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        style={{ padding: \"10px\", marginTop: \"10px\" }}\n      >\n        <Grid item xs={10}>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            rows={2}\n            fullWidth\n            placeholder=\"메시지를 입력하세요.\"\n            value={message}\n            onChange={(e) => {\n              setMessage(e.target.value);\n            }}\n            onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\n          />\n        </Grid>\n        <Grid item xs={2} container>\n          <Button variant=\"contained\" fullWidth onClick={(e) => sendMessage(e)}>\n            전송\n          </Button>\n        </Grid>\n      </Grid>\n    );\n}\nexport default Input;","import queryString from \"query-string\";\nimport {useEffect, useState, useRef} from \"react\";\nimport socketClient from \"socket.io-client\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"../component/List\";\nimport Message from \"../component/Message\";\nimport Input from \"../component/Input\";\n\nconst Server = \"/\";\nlet socket;\n\nfunction Room({location}) {\n  const [name, setName] = useState(\"\"); \n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const messagesRef = useRef<HTMLDivElement>(null);\n \n  useEffect(()=>{\n    socket = socketClient(Server);\n    const { name } = queryString.parse(location.search);\n    setName(name);\n\n    socket.emit(\"join\", { name });\n\n    socket.on(\"usersInfo\",(userInfoArray)=> {\n      setUsers(userInfoArray);\n    });\n\n    return ()=>{\n      socket.disconnect();\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[Server, location.search]);\n\n  useEffect(()=>{\n    socket.on(\"message\",(message)=>{\n      setMessages(messages => [ ...messages, message ]);\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  useEffect(() => {\n    messagesRef.current!.scrollTop = messagesRef.current!.scrollHeight;\n  }, [messages]);\n\n  const sendMessage = (e)=> {\n    e.preventDefault();\n    if(message){\n      socket.emit(\"sendMessage\",name, message,()=>{setMessage(\"\")});\n    }\n  };\n  return (\n    <Grid container justifyContent=\"center\" style={{ padding: \"1em\" }}>\n      <Grid item xs={12} sm={9} md={7}>\n        <Paper>\n          <List ListData={users} />\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} sm={9} md={7} style={{ marginTop: \"10px\"}}>\n        <Paper>\n          <div style={{ height: \"400px\", overflowY: \"auto\" }} ref={messagesRef}>\n            {messages.map((value, key) => {\n              return (\n                <Message\n                  key={key}\n                  name={value.name}\n                  text={value.message}\n                  user={name}\n                />\n              );\n            })}\n          </div>\n          <Input\n            sendMessage={sendMessage}\n            message={message}\n            setMessage={setMessage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\nexport default Room;\n","import Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link } from \"react-router-dom\";\n\nfunction Home(){\n    return (\n        <Grid container justifyContent=\"center\" style={{paddingTop: 60}}>\n            <Grid xs={11} sm={9} md={10} container spacing={5} direction=\"column\">\n                <Grid item>\n                    <Typography variant=\"subtitle1\">2021.10.08 - React 개인 프로젝트</Typography>\n                    <Typography variant=\"h3\">React + Node.js + Socket.io로 채팅 만들기</Typography>\n                </Grid>\n                <Grid item>\n                    <Typography variant=\"h5\">CSS Framewokr: material-UI 사용</Typography>\n                    <Button variant=\"outlined\" component={Link} to=\"/join\" size=\"large\">채팅방 입장하기</Button>\n                </Grid>\n                <Grid item>\n                    <Typography variant=\"body1\"><b>react</b>를 이용하여 채팅어플리케이션을 만들고 <b>Heroku</b>를 이용하여 배포하기</Typography>                     \n                </Grid>\n                <Grid item>\n                    <Typography variant=\"h4\">1. 환경세팅</Typography>\n                    <Typography variant=\"body1\">채팅</Typography>\n                </Grid>\n                <Grid item>\n                    <Button variant=\"contained\" target=\"_blank\" href=\"https://github.com/yeong-gil/Chatting-app\" startIcon={<GitHubIcon />}>GIT HUB</Button>\n                </Grid>\n               \n            </Grid>\n        </Grid>\n    )\n}\nexport default Home;","import { useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Link from \"@material-ui/core/Link\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as DomLink} from \"react-router-dom\";\n\nfunction Header(){\n    let menuWidth = 200;\n    const [meunOpen, setMeunOpen] = useState(false);\n    const SideMenuToggle = () => {\n        setMeunOpen((prevState)=> (!prevState));\n    };\n\n    const ListContent = (\n        <List style={{ width: menuWidth}}>\n            <ListItem>\n                <ListItemText>\n                    <Link component={DomLink} to=\"/\" onClick={SideMenuToggle}>홈</Link>\n                </ListItemText>\n            </ListItem>\n            <Divider></Divider>\n            <ListItem>\n                <ListItemText>\n                    <Link component={DomLink} to=\"/join\" onClick={SideMenuToggle}>입장하기</Link>\n                </ListItemText>\n            </ListItem>\n            <ListItem>\n                <ListItemText>\n                    <Link component={DomLink} to=\"/join\" onClick={SideMenuToggle}>방 리스트보기</Link>\n                </ListItemText>\n            </ListItem>\n        </List>\n    );\n    return(\n        <AppBar position=\"static\">\n            <ToolBar>  \n                <Grid container justifyContent=\"space-between\">\n                    <Grid item>\n                        <IconButton onClick={SideMenuToggle} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" component=\"span\" style={{ paddingLeft: 12}}>채팅 어플리케이션</Typography>\n                    </Grid>\n                    <Grid item>\n                        <IconButton edge=\"end\" target=\"_blank\" href=\"https://github.com/yeong-gil/Chatting-app\" color=\"inherit\">\n                            <GitHubIcon />\n                        </IconButton>\n                    </Grid>\n                </Grid>            \n            </ToolBar>\n            <Drawer variant=\"temporary\" open={meunOpen} onClose={SideMenuToggle}>\n                {ListContent}\n            </Drawer>\n        </AppBar>\n    )\n}\nexport default Header;","import { Switch, Route } from \"react-router-dom\";\nimport { Join, Room, Home }  from \"./pages/index.js\";\nimport { Header } from \"./layout/index.js\"\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/join\" component={Join} />\n        <Route path=\"/room\" component={Room} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}