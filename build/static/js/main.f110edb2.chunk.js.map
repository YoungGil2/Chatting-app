{"version":3,"sources":["pages/Join.tsx","pages/Room.tsx","layout/Header.tsx","layout/SideMenu.tsx","layout/Layout.tsx","pages/test.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Join","socket","useState","name","setName","Grid","container","justifyContent","style","padding","marginTop","item","xs","Paper","direction","alignItems","spacing","TextField","onChange","e","target","value","variant","Button","component","Nav","to","Room","location","setRoom","message","setMessage","messages","setMessages","users","setUsers","useEffect","socketClient","queryString","parse","search","room","emit","on","userInfoArray","disconnect","map","key","onKeyPress","sendMessage","onClick","Header","setOpen","AppBar","position","Hidden","mdUp","IconButton","prevState","edge","color","aria-label","Typography","SideMenu","smUp","Drawer","anchor","xsDown","Layout","open","console","log","test","App","exact","path","Test","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f110edb2.chunk.js","sourcesContent":["import Grid  from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useState } from \"react\";\nimport { Link as Nav} from \"react-router-dom\";\n\nfunction Join() {\n  const [name, setName] = useState(\"\"); \n  const [room, setRoom] = useState(\"\"); \n  return (\n    <Grid container justifyContent=\"center\" style={{ padding: \"1em\", marginTop: '10px' }}>\n      <Grid item xs={6}>\n        <Paper>\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n            <Grid item>이름을 입력하고 입장을 하시오.</Grid>\n            <Grid item>\n              <TextField\n                name=\"userName\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                variant=\"outlined\"\n              ></TextField>\n            </Grid>\n            {/* <Grid item>\n              <TextField\n                name=\"roomName\"\n                onChange={(e) => {\n                  setRoom(e.target.value);\n                }}\n              ></TextField>\n            </Grid> */}\n            <Grid item>\n              <Button variant=\"contained\"  component={Nav} to={`/room?name=${name}`}>\n                입장\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\nexport default Join;\n","import queryString from \"query-string\";\nimport {useEffect, useState} from \"react\";\nimport socketClient from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst Server = \"/\";\nlet socket;\n\nfunction Room({location}) {\n  const [name, setName] = useState(\"\"); \n  const [room, setRoom] = useState(\"\"); \n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n \n  useEffect(()=>{\n    socket = socketClient(Server);\n    const {name, room} = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n\n    socket.emit(\"join\", { name, room });\n\n    socket.on(\"usersInfo\",(userInfoArray)=> {\n      // console.log('접속자들 정보:', userInfoArray);\n      setUsers(userInfoArray);\n    });\n\n    return ()=>{\n      socket.disconnect();\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[Server, location.search]);\n\n  useEffect(()=>{\n    socket.on(\"message\",(message)=>{\n      setMessages(messages => [ ...messages, message ]);\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sendMessage = (e)=> {\n    if(message && e.key === \"Enter\"){\n      socket.emit(\"sendMessage\",name, message,()=>{setMessage(\"\")});\n    }\n  };\n  return (\n    <Grid container justifyContent=\"center\" direction=\"column\" spacing={3} style={{ padding: \"1em\" }}>\n       <Grid item xs={6}>\n        <Paper>\n          <Grid container direction=\"column\" >\n            <Grid container>\n              <Grid>접속자 리스트</Grid>\n            </Grid>\n            {users.map((value,key)=> {\n                return (\n                  <Grid key={key} container justifyContent=\"flex-end\">\n                    <Grid>{value.name} </Grid>\n                  </Grid>\n                );\n            })}\n          </Grid>\n        </Paper>\n      </Grid>\n      \n      \n      <Grid item xs={6}>\n        <Paper>\n          <Grid container direction=\"column\">\n            \n            {messages.map((value,key) => {\n              if(name === value.name){\n                return (\n                  <Grid key={key} container justifyContent=\"flex-end\">\n                    <Grid>{value.name}: </Grid>\n                    <Grid>{value.message}</Grid>\n                  </Grid>\n                )\n              }else if(value.name === 'admin') {\n                return (\n                  <Grid key={key} container direction=\"column\" alignItems=\"center\" justifyContent=\"flex-start\">\n                    <Grid>{value.name}</Grid>\n                    <Grid>{value.message}</Grid>\n                  </Grid>\n                )\n              }else {\n                return (\n                  <Grid key={key} container justifyContent=\"flex-start\">\n                    <Grid>{value.name}: </Grid>\n                    <Grid>{value.message}</Grid>\n                  </Grid>\n                )\n              }\n              \n            })}\n          </Grid>\n          <Grid container justifyContent=\"center\" >\n              <TextField\n                variant=\"outlined\"\n                value={message}\n                onChange={(e) => {\n                  setMessage(e.target.value);\n                }}\n                onKeyPress={(e) => {\n                  sendMessage(e);\n                }}\n              />\n              <Button variant=\"contained\" onClick={()=>{ socket.emit(\"sendMessage\",name, message,()=>{setMessage(\"\")});}}>전송</Button>\n            </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\nexport default Room;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Hidden from \"@material-ui/core/Hidden\";\n\nfunction Header({setOpen}){\n    const SideMenuToggle = () => {\n        setOpen((prevState) =>(\n            !prevState\n        ));\n    };\n    return(\n        <AppBar position=\"static\">\n            <ToolBar>\n                    <Hidden mdUp>\n                        <IconButton onClick={SideMenuToggle} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                <Typography variant=\"h6\">채팅 어플리케이션</Typography>\n            </ToolBar>\n        </AppBar>\n    )\n}\nexport default Header;","import Drawer from '@material-ui/core/Drawer';\nimport { Link } from \"react-router-dom\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n\nfunction SideMenu(){\n    return (\n        <>\n        <Hidden smUp>\n            <Drawer variant=\"temporary\" anchor=\"left\">\n                <div>\n                    <Link to=\"/\">홈</Link><br/>\n                    <Link to=\"/join\">입장하기</Link><br/>\n                </div>\n            </Drawer>\n        </Hidden>\n        <Hidden xsDown>\n            <Drawer variant=\"permanent\" anchor=\"left\">\n                <div>\n                    <Link to=\"/\">홈</Link><br/>\n                    <Link to=\"/join\">입장하기</Link><br/>\n                </div>\n            </Drawer>\n        </Hidden>\n       \n        </>\n    );\n}\nexport default SideMenu;","import react, { useState } from \"react\";\nimport Header from \"./Header\";\nimport SideBar from \"./SideMenu\";\nimport { openSync } from \"fs\";\n\nfunction Layout(){\n    const [open, setOpen] = useState(false);\n    console.log(open);\n    return (\n        <>\n            <Header setOpen={setOpen} />\n            <SideBar />\n        </>\n    );\n}\nexport default Layout;","import Layout from \"../layout/Layout\";\n\nfunction test(){\n    return (\n        <Layout />\n    )\n}\nexport default test;","import { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { Join, Room, Test }  from \"./pages/index.js\";\nimport { Header, SideMenu } from \"./layout/index.js\"\n\nfunction App() {\n  return (\n    <>\n      {/* <Header /> */}\n      {/* <SideMenu /> */}\n        <Switch>\n          <Route exact path=\"/\" component={Join} />\n          <Route path=\"/room\" component={Room} />\n          <Route path=\"/test\" component={Test} />\n        </Switch>\n     \n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}