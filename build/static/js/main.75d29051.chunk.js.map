{"version":3,"sources":["pages/Join.tsx","component/List.tsx","component/Message.tsx","component/Input.tsx","pages/Room.tsx","layout/Header.tsx","layout/SideMenu.tsx","layout/Layout.tsx","pages/test.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Join","useState","name","setName","Grid","container","justifyContent","style","padding","marginTop","item","xs","Paper","direction","alignItems","spacing","TextField","onChange","e","target","value","variant","Button","component","Nav","to","List","ListData","subheader","ListSubheader","height","overflow","map","key","ListItem","dense","ListItemIcon","ListItemText","Message","text","user","console","log","Position","width","Typography","elevation","Input","socket","sendMessage","message","setMessage","multiline","rows","fullWidth","placeholder","onKeyPress","onClick","Room","location","setRoom","messages","setMessages","users","setUsers","messagesRef","useRef","useEffect","socketClient","queryString","parse","search","room","emit","on","userInfoArray","disconnect","current","scrollTop","scrollHeight","sm","md","overflowY","ref","preventDefault","Header","menuOpen","AppBar","position","Hidden","mdUp","IconButton","prevState","edge","color","aria-label","SideMenu","menuStatus","smUp","Drawer","anchor","xsDown","Layout","open","setOpen","test","App","exact","path","Test","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75d29051.chunk.js","sourcesContent":["import Grid  from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useState } from \"react\";\nimport { Link as Nav} from \"react-router-dom\";\n\nfunction Join() {\n  const [name, setName] = useState(\"\"); \n  const [room, setRoom] = useState(\"\"); \n  return (\n    <Grid container justifyContent=\"center\" style={{ padding: \"1em\", marginTop: '10px' }}>\n      <Grid item xs={6}>\n        <Paper>\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n            <Grid item>이름을 입력하고 입장을 하시오.</Grid>\n            <Grid item>\n              <TextField\n                name=\"userName\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                variant=\"outlined\"\n              ></TextField>\n            </Grid>\n            {/* <Grid item>\n              <TextField\n                name=\"roomName\"\n                onChange={(e) => {\n                  setRoom(e.target.value);\n                }}\n              ></TextField>\n            </Grid> */}\n            <Grid item>\n              <Button variant=\"contained\"  component={Nav} to={`/room?name=${name}`}>\n                입장\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\nexport default Join;\n","import { List as Container} from '@material-ui/core';\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PersonIcon from '@material-ui/icons/Person';\n\ninterface ListProps {\n    ListData: Array<any>\n}\n\nfunction List({ListData}: ListProps){\n    return (\n        <Container \n            subheader={\n                <ListSubheader>접속자 목록</ListSubheader>\n            }\n            style={{ height: \"150px\", overflow: \"auto\"}}     \n        >   \n            {ListData.map((value, key)=> {\n                const { name } = value;\n                return (\n                    <ListItem key={key} dense={true}>\n                        <ListItemIcon>\n                            <PersonIcon />\n                        </ListItemIcon>\n                        <ListItemText>\n                            {name}\n                        </ListItemText>\n                    </ListItem>\n                ) \n            })}\n            \n        </Container>\n    );\n}\nexport default List;","import Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\ninterface MessageProps {\n    name: string;\n    text: string;\n    user: string;\n}\n\nfunction Message({name, text, user}: MessageProps){\n    console.log(user, name);\n    const Position = user === name ? \"flex-end\" : \"flex-start\";\n    return (\n        <Grid container direction=\"column\" alignItems={Position} spacing={2} style={{width: \"100%\", padding: \"10px 10px\"}}>\n            <Grid item>\n                <Typography>{name}</Typography>\n            </Grid>\n            <Grid item>\n                <Paper elevation={3} style={{ padding: \"10px 20px\"}}>\n                    {text}\n                </Paper>\n            </Grid>        \n        </Grid>\n    )\n}\nexport default Message;","import TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\ninterface InputProps {\n  sendMessage: (e) => void;\n  message: string;\n  setMessage: (e) => void;\n}\n\nfunction Input({sendMessage, message, setMessage}: InputProps){\n    return (\n      <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        style={{ padding: \"10px\", marginTop: \"10px\" }}\n      >\n        <Grid item xs={10}>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            rows={2}\n            fullWidth\n            placeholder=\"메시지를 입력하세요.\"\n            value={message}\n            onChange={(e) => {\n              setMessage(e.target.value);\n            }}\n            onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\n          />\n        </Grid>\n        <Grid item xs={2} container>\n          <Button variant=\"contained\" fullWidth onClick={(e) => sendMessage(e)}>\n            전송\n          </Button>\n        </Grid>\n      </Grid>\n    );\n}\nexport default Input;","import queryString from \"query-string\";\nimport {useEffect, useState, useRef} from \"react\";\nimport socketClient from \"socket.io-client\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"../component/List\";\nimport Message from \"../component/Message\";\nimport Input from \"../component/Input\";\n\nconst Server = \"/\";\nlet socket;\n\nfunction Room({location}) {\n  const [name, setName] = useState(\"\"); \n  const [room, setRoom] = useState(\"\"); \n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const messagesRef = useRef<HTMLDivElement>(null);\n \n  useEffect(()=>{\n    socket = socketClient(Server);\n    const {name, room} = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n\n    socket.emit(\"join\", { name, room });\n\n    socket.on(\"usersInfo\",(userInfoArray)=> {\n      setUsers(userInfoArray);\n    });\n\n    return ()=>{\n      socket.disconnect();\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[Server, location.search]);\n\n  useEffect(()=>{\n    socket.on(\"message\",(message)=>{\n      setMessages(messages => [ ...messages, message ]);\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  useEffect(() => {\n    messagesRef.current!.scrollTop = messagesRef.current!.scrollHeight;\n  }, [messages]);\n\n  const sendMessage = (e)=> {\n    e.preventDefault();\n    if(message){\n      socket.emit(\"sendMessage\",name, message,()=>{setMessage(\"\")});\n    }\n  };\n  return (\n    <Grid container justifyContent=\"center\" style={{ padding: \"1em\" }}>\n      <Grid item xs={12} sm={9} md={7}>\n        <Paper>\n          <List ListData={users} />\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} sm={9} md={7} style={{ marginTop: \"10px\"}}>\n        <Paper>\n          <div style={{ height: \"400px\", overflowY: \"auto\" }} ref={messagesRef}>\n            {messages.map((value, key) => {\n              return (\n                <Message\n                  key={key}\n                  name={value.name}\n                  text={value.message}\n                  user={name}\n                />\n              );\n            })}\n          </div>\n          <Input\n            sendMessage={sendMessage}\n            message={message}\n            setMessage={setMessage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\nexport default Room;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Hidden from \"@material-ui/core/Hidden\";\n\ninterface headerProps {\n    menuOpen: (value)=> void;\n}\n\nfunction Header( { menuOpen }: headerProps){\n    const SideMenuToggle = () => {\n        menuOpen((prevState) =>(\n            !prevState\n        ));\n    };\n    return(\n        <AppBar position=\"static\">\n            <ToolBar>\n                    <Hidden mdUp>\n                        <IconButton onClick={SideMenuToggle} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                <Typography variant=\"h6\">채팅 어플리케이션</Typography>\n            </ToolBar>\n        </AppBar>\n    )\n}\nexport default Header;","import Drawer from '@material-ui/core/Drawer';\nimport { Link } from \"react-router-dom\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\ninterface sideMenuProps {\n    menuStatus: boolean;\n}\n\nfunction SideMenu({menuStatus}:sideMenuProps){\n    return (\n        <>\n        <Hidden smUp>\n            <Drawer variant=\"temporary\" anchor=\"left\">\n                <div>\n                    <Link to=\"/\">홈</Link><br/>\n                    <Link to=\"/join\">입장하기</Link><br/>\n                </div>\n            </Drawer>\n        </Hidden>\n        <Hidden xsDown>\n            <Drawer variant=\"permanent\" anchor=\"left\">\n                <div>\n                    <Link to=\"/\">홈</Link><br/>\n                    <Link to=\"/join\">입장하기</Link><br/>\n                </div>\n            </Drawer>\n        </Hidden>\n       \n        </>\n    );\n}\nexport default SideMenu;","import { useState } from \"react\";\nimport Header from \"./Header\";\nimport SideBar from \"./SideMenu\";\n\nfunction Layout(){\n    const [open, setOpen] = useState(false);\n    return (\n        <>\n            <Header menuOpen={setOpen} />\n            <SideBar menuStatus={open}/>\n        </>\n    );\n}\nexport default Layout;","import Layout from \"../layout/Layout\";\n\nfunction test(){\n    return (\n        <Layout />\n    )\n}\nexport default test;","import { Switch, Route } from \"react-router-dom\";\nimport { Join, Room, Test }  from \"./pages/index.js\";\nimport { Header, SideMenu } from \"./layout/index.js\"\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      {/* <SideMenu /> */}\n        <Switch>\n          <Route exact path=\"/\" component={Join} />\n          <Route path=\"/room\" component={Room} />\n          <Route path=\"/test\" component={Test} />\n        </Switch>\n     \n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}