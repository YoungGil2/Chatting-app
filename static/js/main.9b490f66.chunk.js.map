{"version":3,"sources":["pages/Join.tsx","pages/Room.tsx","layout/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Join","socket","useState","user","setUser","Grid","container","justifyContent","style","padding","item","xs","Paper","direction","alignItems","spacing","TextField","name","onChange","e","target","value","Link","component","Nav","to","Server","Room","location","setRoom","message","setMessage","messages","setMessages","useEffect","socketClient","queryString","parse","search","room","emit","on","console","log","variant","onKeyPress","key","sendMessage","Header","AppBar","position","Typography","App","excact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OA0CeA,ICjCXC,EDiCWD,EAnCf,WAAiB,IAAD,EACUE,mBAAS,IADnB,mBACPC,EADO,KACDC,EADC,OAEUF,mBAAS,IAFnB,mBAGd,OAHc,UAIZ,cAACG,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,MAAO,CAAEC,QAAS,OAA1D,SACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,UACE,eAACP,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAU,SAASC,WAAW,SAASC,QAAS,EAAhE,UACE,cAACV,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACM,EAAA,EAAD,CACEC,KAAK,WACLC,SAAU,SAACC,GACTf,EAAQe,EAAEC,OAAOC,YAYvB,cAAChB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACY,EAAA,EAAD,CAAMC,UAAWC,IAAKC,GAAE,qBAAgBtB,GAAxC,sC,0CCxBRuB,EAAS,wBA+CAC,MA5Cf,YAA2B,IAAZC,EAAW,EAAXA,SAAW,EACA1B,mBAAS,IADT,mBACXE,GADW,aAEAF,mBAAS,IAFT,mBAEX2B,GAFW,aAGM3B,mBAAS,IAHf,mBAGjB4B,EAHiB,KAGRC,EAHQ,OAIQ7B,mBAAS,IAJjB,mBAIjB8B,EAJiB,KAIPC,EAJO,KA8BxB,OAxBAC,qBAAU,WACRjC,EAASkC,IAAaT,GADV,MAESU,IAAYC,MAAMT,EAASU,QAAzCnC,EAFK,EAELA,KAAMoC,EAFD,EAECA,KACbnC,EAAQD,GACR0B,EAAQU,GAERtC,EAAOuC,KAAK,OAAQ,CAAErC,OAAMoC,SAAQ,iBAGpC,CAACb,EAAQE,EAASU,SAEpBJ,qBAAU,WACRjC,EAAOwC,GAAG,WAAU,SAACX,GACnBG,EAAY,GAAD,mBAAKD,GAAL,CAAeF,UAG5B,CAACA,IAOHY,QAAQC,IAAIX,GAEV,cAAC3B,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,SACE,cAACS,EAAA,EAAD,CAAW4B,QAAQ,WACjBvB,MAAOS,EACPZ,SAAU,SAACC,GACTY,EAAWZ,EAAEC,OAAOC,QAEtBwB,WAAY,SAAC1B,IAbC,SAACA,GAChBW,GAAqB,UAAVX,EAAE2B,KACd7C,EAAOuC,KAAK,cAAeV,GAAQ,WAAKC,EAAW,OAY/CgB,CAAY5B,S,2BCpCP6B,MATf,WACI,OACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,cAAC,IAAD,UACI,cAACC,EAAA,EAAD,CAAYP,QAAQ,KAApB,wBCYDQ,MAdf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,QAAM,EAACC,KAAK,QAAQ/B,UAAWvB,IACtC,cAAC,IAAD,CAAOsD,KAAK,QAAQ/B,UAAWI,aCC1B4B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9b490f66.chunk.js","sourcesContent":["import Grid  from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useState } from \"react\";\nimport { Link as Nav} from \"react-router-dom\";\n\nfunction Join() {\n  const [user, setUser] = useState(\"\"); \n  const [room, setRoom] = useState(\"\"); \n  return (\n    <Grid container justifyContent=\"center\" style={{ padding: \"1em\" }}>\n      <Grid item xs={6}>\n        <Paper>\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n            <Grid item>\n              <TextField\n                name=\"userName\"\n                onChange={(e) => {\n                  setUser(e.target.value);\n                }}\n              ></TextField>\n            </Grid>\n            {/* <Grid item>\n              <TextField\n                name=\"roomName\"\n                onChange={(e) => {\n                  setRoom(e.target.value);\n                }}\n              ></TextField>\n            </Grid> */}\n            <Grid item>\n              <Link component={Nav} to={`/room?user=${user}`}>\n                입장\n              </Link>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\nexport default Join;\n","import queryString from \"query-string\";\nimport {useEffect, useState} from \"react\";\nimport socketClient from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst Server = \"http://localhost:3005\";\nlet socket;\n\nfunction Room({location}) {\n  const [user, setUser] = useState(\"\"); \n  const [room, setRoom] = useState(\"\"); \n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(()=>{\n    socket = socketClient(Server);\n    const {user, room} = queryString.parse(location.search);\n    setUser(user);\n    setRoom(room);\n\n    socket.emit(\"join\", { user, room }, () => {\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[Server, location.search]);\n\n  useEffect(()=>{\n    socket.on(\"message\",(message)=>{\n      setMessages([...messages, message]);\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[message]);\n\n  const sendMessage = (e)=> {\n    if(message && e.key === \"Enter\"){\n      socket.emit(\"sendMessage\", message,()=>{setMessage(\"\")});\n    }\n  };\n  console.log(messages);\n  return (\n    <Grid container justifyContent=\"center\">\n      <TextField variant=\"outlined\"\n        value={message}\n        onChange={(e) => {\n          setMessage(e.target.value);\n        }}\n        onKeyPress={(e) => {\n          sendMessage(e);\n        }}\n      />\n    </Grid>\n  );\n}\nexport default Room;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Header(){\n    return(\n        <AppBar position=\"static\">\n            <ToolBar>\n                <Typography variant=\"h6\">react</Typography>\n            </ToolBar>\n        </AppBar>\n    )\n}\nexport default Header;","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Join, Room }  from \"./pages/index\";\nimport { Header } from \"./layout/index\"\n\nconst Server = \"http://localhost:3005\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <BrowserRouter>\n        <Switch>\n          <Route excact path=\"/join\" component={Join} />\n          <Route path=\"/room\" component={Room} />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}